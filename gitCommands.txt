git clone remote.url
	init project localy.


git init
	start tracking current directory

git add file
	stage file

git add .
	stage all changed files

git branch
	list all branches

git branch branch_name
	create new branch

git checkout branch_name
	switch to the named branch

git push origin branch_name
	push the changes to the remote branch

git push
	push the changes to the default remote branch

git merge branch_name
	merge the named branch to the active branch

git config user.name "username"
	set the user name for the current repository only

git config user.email "user email"
	set the user email for the current repository only

git --global config user.name "user name"
	set the user name for all repositories.

git --global config user.email "user email"
	set the user email for all repositries.

git config --global core.excludesfile ~/.gitignore_global
	create a global .gitignore file to list rules for ignoring files for all 
	repositories
	"Or using your favorite text editor, open the file .git/info/exclude in 
	specific repository and list rules for ignoring files for that repository."
	Example .gitignore files: https://github.com/github/gitignore

git remote
	give you the name of the remote repository.

git remote -v
	give the names and the links to the remote repositories.

git push origin --delete <branchName>
	delete the remote branch.

git branch -d <branchName>
	delete the local branch.

git remote add origin <url>
	Add a remote repository, <usually this command follows 'git init'>
	remote url could be one of the following:
    	https://github.com/user/repo2.git if you're updating to use HTTPS
	git@github.com:user/repo2.git if you're updating to use SSH

git remote set-url
	Changes an existing remote repository URL.
	remote url could be one of the following:
    	https://github.com/user/repo2.git if you're updating to use HTTPS
	git@github.com:user/repo2.git if you're updating to use SSH

git config push.default current
	change the default push behavior for the repository, and instead of the "current" you can even set it to :
	current, upstream, simple, and every one of them mean the follwing:
	current:
        "what" you are pushing is only your current branches (not the rest),
        "to where" is to a branch of the same name (created if it doesn't exist) of the same name in the upstream repo.

	upstream:
        "what" is only the current branch,
        "to where" is to whatever branch (not necessarily of the same name) of the upstream repo has been assigned as 
	an upstream branch for the local branch you are pushing.

	simple:
	"git push" without any refspec will push the current branch out to the same name at the remote repository only 
	when it is set to track the branch with the same name over there.
	It is like "upstream", but refuses to push if the upstream branch's name is different from the local one.


git config â€“global push.default current
	exactly as the above command except it will set the changes across over all repositories.
